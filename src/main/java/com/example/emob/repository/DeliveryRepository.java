/* EMOB-2025 */
package com.example.emob.repository;

import com.example.emob.constant.DeliveryStatus;
import com.example.emob.entity.Customer;
import com.example.emob.entity.Dealer;
import com.example.emob.entity.Delivery;
import java.util.List;
import java.util.UUID;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

public interface DeliveryRepository extends JpaRepository<Delivery, UUID> {
  // ============================================================
  // üîπ 1. H√£ng xe (EVM_STAFF, ADMIN) xem t·∫•t c·∫£ delivery c·ªßa ƒë·∫°i l√Ω
  // ============================================================
  @Query(
      """
    SELECT d
    FROM Delivery d
    JOIN FETCH d.saleContract c
    JOIN c.saleOrder so
    JOIN so.vehicleRequest vr
    WHERE (:statuses IS NULL OR d.status IN :statuses)
      AND (:keyword IS NULL
           OR LOWER(CAST(d.quantity AS string)) LIKE LOWER(CONCAT('%', :keyword, '%'))
           OR LOWER(c.contractNumber) LIKE LOWER(CONCAT('%', :keyword, '%')))
      AND d.isDeleted = false
""")
  Page<Delivery> searchAndFilterDeliveries(
      @Param("statuses") List<DeliveryStatus> statuses,
      @Param("keyword") String keyword,
      Pageable pageable);

  // ============================================================
  // üîπ 2. ƒê·∫°i l√Ω xem delivery c·ªßa ch√≠nh ƒë·∫°i l√Ω m√¨nh (qua VehicleRequest)
  // ============================================================
  @Query(
      """
  SELECT d
  FROM Delivery d
  JOIN FETCH d.saleContract c
  JOIN c.saleOrder so
  JOIN so.vehicleRequest vr
  WHERE vr.dealer = :dealer
    AND (:statuses IS NULL OR d.status IN :statuses)
    AND d.isDeleted = false
""")
  Page<Delivery> findAllWithVehicleRequestByDealerAndStatuses(
      @Param("dealer") Dealer dealer,
      @Param("statuses") List<DeliveryStatus> statuses,
      Pageable pageable);

  // ============================================================
  // üîπ 3. ƒê·∫°i l√Ω xem delivery c√≥ b√°o gi√° cho kh√°ch h√†ng c·ª• th·ªÉ
  // ============================================================
  @Query(
      """
  SELECT d
  FROM Delivery d
  JOIN FETCH d.saleContract c
  JOIN c.saleOrder so
  JOIN so.quotation q
  WHERE q.dealer = :dealer
    AND q.customer = :customer
    AND (:statuses IS NULL OR d.status IN :statuses)
    AND d.isDeleted = false
""")
  Page<Delivery> findAllWithQuotationByDealerAndCustomer(
      @Param("dealer") Dealer dealer,
      @Param("customer") Customer customer,
      @Param("statuses") List<DeliveryStatus> statuses,
      Pageable pageable);

  // ============================================================
  // üîπ 4. ƒê·∫°i l√Ω xem t·∫•t c·∫£ delivery ƒë√£ b√°o gi√° (m·ªçi kh√°ch h√†ng)
  // ============================================================
  @Query(
      """
  SELECT d
  FROM Delivery d
  JOIN FETCH d.saleContract c
  JOIN c.saleOrder so
  JOIN so.quotation q
  WHERE q.dealer = :dealer
    AND (:statuses IS NULL OR d.status IN :statuses)
    AND d.isDeleted = false
""")
  Page<Delivery> findAllWithQuotationByDealerAndStatuses(
      @Param("dealer") Dealer dealer,
      @Param("statuses") List<DeliveryStatus> statuses,
      Pageable pageable);
}
